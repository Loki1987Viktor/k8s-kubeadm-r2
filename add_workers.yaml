# code: language=ansible
---
# wait all cluster nodes become available to start preparation
- hosts: dvm
  tasks:
    - name: Waiting till new worker-nodes be available via SSH, check each 10 sec
      wait_for:
        host: "{{ item }}"
        port: 22
        sleep: 10
        delay: 10
        timeout: 600
      loop:  "{{ groups.new_workers }}" #"{{ groups.masters[1:] + groups.workers }}"
      connection: local

# prepare additional disks and remap /var,/var/lib directories, 
# prepare OS configuration and kernel parameters and install packages before run K8s components
- hosts: new_workers
  gather_facts: true
  become: true
  vars:
    def_dns_local: "8.8.8.8"     #for initial k8s deployment these variables passed via terraform and cloud init, here specifying inside playbook
    env_dns1_local: "77.88.8.8"  #for initial k8s deployment these variables passed via terraform and cloud init, here specifying inside playbook
    env_dns2_local: "77.88.8.1"  #for initial k8s deployment these variables passed via terraform and cloud init, here specifying inside playbook
  roles:
    - role: prepare_k8s_nodes
      nodes: "{{ groups.new_workers }}"
      def_dns: "{{ def_dns_local }}"
      env_dns1: "{{ env_dns1_local }}"
      env_dns2: "{{ env_dns2_local }}"

# install K8s binaries
- hosts: new_workers
  gather_facts: true
  become: true
  vars:
    k8s_ver_local: "1.28.6-1.1" #for initial k8s deployment these variables passed via terraform and cloud init, here specifying inside playbook
  roles:
    - role: install_k8s_binaries
      k8s_ver: "{{ k8s_ver_local }}"
    
  post_tasks:
    - name: check required K8s binaries was installed on every host
      ansible.builtin.include_tasks: check_k8s_binaries_install_state.yaml 

- hosts: masters[0]
  gather_facts: true
  become: true
  vars_files:
    - ./vars/base_vars.yaml
  roles:
    - k8s_add_workers # join additional worker nodes
